{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,YAEVC,SAAU,OACVC,QAAS,MAGIC,SAASC,cAAc,SAC/BC,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAEC,iBACF,MAAQC,MAAOC,EAAUC,KAAEA,EAAIC,OAAEA,GAiBnC,SAA2BL,GACzB,IAAIM,EAAO,GAKX,OAJiB,IAAIC,SAASP,EAAEQ,eACvBC,SAAQ,CAACC,EAAOC,KACvBL,EAAKK,GAAQC,OAAOF,EAAM,IAErBJ,C,CAvBqCO,CAAkBb,GAE9D,IAAIc,EAAQX,EAEZ,IAAKY,EAAW,EAAGA,GAAYV,EAAQU,GAAY,EACjDC,EAAcD,EAAUD,GACrBG,MAAK,EAAGvB,SAAAwB,EAAQhB,MAAEA,MACjBb,EAAAE,OAAO4B,QAAQ,uBAAqBD,QAAiBhB,MAAU,IAEhEkB,OAAM,EAAG1B,SAAA2B,EAAQnB,MAAEA,MAClBb,EAAAE,OAAO+B,QAAQ,sBAAoBD,QAAenB,MAAU,IAGhEY,GAASV,C,IAjBb,IAAIW,EAAW,EA8Bf,SAASC,EAAcO,EAAUrB,GAC/B,OAAO,IAAIsB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAE/B,SAAA6B,E,MAAUrB,IAEpBwB,EAAO,CAAEhC,SAAA6B,E,MAAUrB,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '300px',\n  position: 'right-top',\n\n  fontSize: '16px',\n  timeout: 5000,\n});\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\nlet position = 1;\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { delay: firstDelay, step, amount } = getValuesFromForm(e);\n\n  let delay = firstDelay;\n\n  for (position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\nfunction getValuesFromForm(e) {\n  let data = {};\n  const formData = new FormData(e.currentTarget);\n  formData.forEach((value, name) => {\n    data[name] = Number(value);\n  });\n  return data;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","width","position","fontSize","timeout","document","querySelector","addEventListener","e","preventDefault","delay","firstDelay","step","amount","data","FormData","currentTarget","forEach","value","name","Number","$47d4ff9957288465$var$getValuesFromForm","delay1","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","then","position1","success","catch","position2","failure","position3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.768a7d5f.js.map"}